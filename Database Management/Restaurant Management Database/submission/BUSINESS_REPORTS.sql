------------------------------------------------------------------------------------------------------------------
                    --WELCOME TO BUISNESS-REPORTS--

/*
VW_SHIFT_MANAGEMENT VIEW HELPS AN EMPLOYER IN FINDING REPLACEMENT FOR AN EMPLOYEE WHO WAS NOT ABLE TO COME .
THEY CAN VIEW THE SHIFT_TIMINGS AND ADDRESS TO CHECK WHICH EMPLOYEE HAS ALREADY COVERED THEIR SHIFT FOR THE DAY,
AND DEPENEDING ON THE ADRESS FOR WHICH EMPLOYEE WOULD IT BE EASIER TO COMMUTE .
FURTHERMPORE , THIS VIEW ALSO DISPLAYS EMPLOYEE CONTACTS , SO NO NEED TO CHECK THEIR CONTACT FROM ANY OTHER SOURCE AGAIN ,
AS THE MANAGER CAN JUST DIAL THE NUMBER USING THIS VIEW .
HENCE , FACTORING DOWN , WHICH EMPLOYEE WOULD BE IDEAL FOR CALLING FOR REPLACEMENT OF SOMEONE .
*/
CREATE OR REPLACE VIEW VW_SHIFT_MANAGEMENT AS 
SELECT ES.EMP_ID , ES.EMP_FIRSTNAME , ES.EMP_LASTNAME , ES.EMP_ADDRESS , ES.EMP_CONTACT , SE.SHIFT_TYPE , SE.SHIFT_STARTS , SE.SHIFT_ENDS
FROM EMPLOYEES ES INNER JOIN SCHEDULE SE 
ON ES.SCHEDULE_ID = SE.SCHEDULE_ID
ORDER BY ES.SCHEDULE_ID ASC;


------------------------------------------------------------------------------------------------------------------

/*
VW_PROMOTION_INDEX HELPS THE EMPLOYERS I.E THE EXECUTIVES AND MANAGERS OF WHICH EMPLOYEE HAS COMPLETED THE -
MINIMUM DAYS OF REQUIREMENT TO BE PROMOTED TO NEXT POSTION . ALSO , HOW MUCH THEIR WAGES WILL INCREASE ,
WHEN THEY ARE PROMOTED . FURTHERMORE , SHOWING WHICH EMPLOYEE IS AT WHICH POSITION CURRENTLY . 
HOW WILL THE PROMOTION EFFECT THEIR SHIFT TIMINGS AND TYPES ( MORNING , AFTERNOON , OVERNIGHT ) 
AS THE USER CAN ALSO SEE SHIFT_TYPES AND SHIFT_TIMINGS OF THE EMPLOYEES .
*/
CREATE OR REPLACE VIEW VW_PROMOTION_INDEX AS 
SELECT  RE.ROLE_ID,ES.EMP_ID , ES.EMP_FIRSTNAME , ES.EMP_LASTNAME , RE.ROLE_TYPE , RE.EMP_WAGE , RE.MIN_DAYS_FOR_PROMO  , 
SE.SHIFT_TYPE , SE.SHIFT_STARTS , SE.SHIFT_ENDS
FROM EMPLOYEES ES INNER JOIN SCHEDULE SE ON ES.SCHEDULE_ID = SE.SCHEDULE_ID
JOIN ROLE  RE ON RE.ROLE_ID = ES.ROLE_ID 
ORDER BY ES.SCHEDULE_ID ASC;


------------------------------------------------------------------------------------------------------------------


/*
VW_RESTERAUNT_FINANCE_MANAGER CAN BE USED BY RESTERAUNT HIGHER UPS , THE MANAGERS , THE EXECUTIVES , THE FINANCERS
IN ORDER TO KEEP TRACK OF FINACNES WITH FINACE_ID . WITH THE FINANCE ID , ALLL THE FINANCIAL INFORMATION IS ATTACHED INSIDE THE FINACE TABLE .
FURTHERMORE , JOINING THIS TABLE WITH RESTERAUNT_BRANCH , ASSOCIATES FINANCE_ID WITH BRANCH ID . 
WITH THIS VIEW USER CAN SEE THE BUDGET OF THE RESTERAUNT ,
THE EXPENDITURE ALONG WITH THE CALCULATE DPROFIT AND LOSS PERCENTAGES . 
IN ORDER TO FIND WHERE THEY CAN CUT COSTS AND SAVE MONEY FURTHER DEVELOPING THEIR BUSINESSES AND KEEPING TRACK OF THE FLOW OF MONEY
*/
CREATE OR REPLACE VIEW VW_RESTERAUNT_FINANCE_MANAGER AS
SELECT RB.REST_ID , RB.REST_LOCATION , RB.REST_STARS , FS.FINANCE_ID , FS.BUDGET ,FS.PROFIT , FS.LOSS 
FROM RESTERAUNT_BRANCH RB LEFT OUTER JOIN FINANCES FS
ON RB.REST_ID = FS.REST_ID ; 

------------------------------------------------------------------------------------------------------------------

/* ALL OF THE VIEWS BELOW , DISPLAY A SPECIFIC TYPE OF MENU .
EACH OF THEM SHOW THE CONTENTS OF THE MENU OF A SPECIFIC TYPE , BE IT - BREAKFAST , LUNCH , SNACKS , DINNER .
ALONG WITH THEIR PRICES WRITTEN DOWN . ALL OF THESE VIEWS CAN BE PRINTED DIRECTLY TO BE DISPLAYED ON SCREENS ,
OR PUT AS BOARDS , WHICH TELL THE CUSTOMERS "HOW MUCH ,COSTS WHAT" , SO THE DO NOT KEEP ON BOTHERING THE EMPLOYEES.
FURTHER , HELPS KEEP TRACK OF WHICH ITEMS IS SERVED WHEN , MAKES SORTING OF MENU_CONTENT EASIER .
*/
CREATE OR REPLACE VIEW VWB_BREAKFAST_MENU AS
SELECT MU.MENU_TYPE , MC.ITEM_NAME , MC.PRICE 
FROM MENU_CONTENT MC INNER JOIN MENU MU 
ON MC.MENUID = MU.MENUID 
WHERE MU.MENU_TYPE='Breakfast';

CREATE OR REPLACE VIEW VWB_LUNCH_MENU AS
SELECT MU.MENU_TYPE , MC.ITEM_NAME , MC.PRICE 
FROM MENU_CONTENT MC INNER JOIN MENU MU 
ON MC.MENUID = MU.MENUID 
WHERE MU.MENU_TYPE='Lunch';

CREATE OR REPLACE VIEW VWB_SNACKS_MENU AS
SELECT MU.MENU_TYPE , MC.ITEM_NAME , MC.PRICE 
FROM MENU_CONTENT MC INNER JOIN MENU MU 
ON MC.MENUID = MU.MENUID 
WHERE MU.MENU_TYPE='Snacks';

CREATE OR REPLACE VIEW VWB_DINNER_MENU AS
SELECT MU.MENU_TYPE , MC.ITEM_NAME , MC.PRICE 
FROM MENU_CONTENT MC INNER JOIN MENU MU 
ON MC.MENUID = MU.MENUID 
WHERE MU.MENU_TYPE='Dinner';

------------------------------------------------------------------------------------------------------------------



